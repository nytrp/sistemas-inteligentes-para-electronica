# -*- coding: utf-8 -*-
"""Outliers Nazhir.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VLuoDrzKd9z8Bv4ARsX7XpiUqFtk6sTk

Alejandro Martinez
"""

!pip install matplotlib

import numpy as np
import matplotlib.pyplot as plt

np.random.seed(42)
data = np.random.normal(loc=50, scale=10, size=100)

data = np.append(data, [350, 360, 170])

Q1 = np.percentile(data, 25)
Q3 = np.percentile(data, 75)

IQR = Q3 - Q1

lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

outliers = data[(data < lower_bound) | (data > upper_bound)]

print("Cantidad total de datos:", len(data))
print("Q1:", Q1)
print("Q3:", Q3)
print("IQR:", IQR)
print("Límite inferior:", lower_bound)
print("Límite superior:", upper_bound)
print("Outliers detectados:", outliers)

plt.figure(figsize=(6,4))
plt.boxplot(data, vert=False)
plt.title("Detección de Outliers con IQR")
plt.show()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_excel("/content/drive/MyDrive/Colab Notebooks/datos_150.xlsx")

columna = "Valores"
data = df[columna].dropna().to_numpy()

Q1 = np.percentile(data, 25)
Q3 = np.percentile(data, 75)
IQR = Q3 - Q1

lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

outliers = data[(data < lower_bound) | (data > upper_bound)]

print("Cantidad total de datos:", len(data))
print("Q1:", Q1)
print("Q3:", Q3)
print("IQR:", IQR)
print("Límite inferior:", lower_bound)
print("Límite superior:", upper_bound)
print("Outliers detectados:", outliers)

plt.figure(figsize=(8,5))
plt.boxplot(data, vert=False, patch_artist=True)
plt.title("Detección de Outliers con IQR")
plt.xlabel("Valores")
plt.show()